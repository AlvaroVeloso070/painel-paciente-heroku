{"version":3,"sources":["components/LoginForm.js","pages/LoginPage/LoginPage.js","components/RegisterForm.js","pages/RegisterPage/RegisterPage.js","components/HomeComponent.js","components/NavBar.js","pages/HomePage/HomePage.js","components/EditMedico.js","components/CreateMedico.js","components/ListMedicos.js","pages/MedicosPage/MedicosPage.js","components/CreatePaciente.js","components/EditPaciente.js","components/ListPacientes.js","pages/PacientesPage/PacientesPage.js","components/ListCadastros.js","pages/CadastrosPage/CadastrosPage.js","components/ProfileEdit.js","components/ProfileInfo.js","pages/ProfilePage/ProfilePage.js","pages/AboutPage/AboutPage.js","App.js","index.js"],"names":["LoginForm","_useState","useState","email","senha","_useState2","Object","slicedToArray","values","setValues","registered","_useState3","_useState4","data","setData","navigate","useNavigate","onChange","event","_event$target","target","name","value","objectSpread","defineProperty","useEffect","asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","fetch","sent","json","stop","react_default","a","createElement","className","htmlFor","type","placeholder","required","onClick","forEach","item","alert","nome","sessionStorage","setItem","JSON","stringify","e","react_router_dom","to","LoginPage","LoginForm_LoginForm","inicialValues","tipo_pessoa","data_nascimento","telefone","url","RegisterForm","RegisterForm_regeneratorRuntime","id","usedEmail","requestOptions","method","headers","Content-Type","Access-Control-Allow-Origin","body","then","catch","erro","console","log","RegisterPage","components_RegisterForm","HomeComponent","user","parse","getItem","split","alt","src","NavBar","href","index_esm","HomePage","NavBar_NavBar","HomeComponent_HomeComponent","EditMedico","_ref","closeEdit","setUser","especialidade","username","readOnly","error","CreateMedico","closeCreate","ListMedicos","openEdit","setOpenEdit","openCreate","setOpenCreate","Fragment","CreateMedico_CreateMedico","EditMedico_EditMedico","document","getElementById","style","display","map","key","putData","ai_index_esm","text","window","confirm","deleteData","MedicosPage","rows","setRows","MedicosPage_regeneratorRuntime","ListMedicos_ListMedicos","CreatePaciente","cpf","dataNascimento","sintomas","dataEntrada","EditPaciente","ListPacientes","CreatePaciente_CreatePaciente","EditPaciente_EditPaciente","PacientesPage","PacientesPage_regeneratorRuntime","ListPacientes_ListPacientes","ListCadastros","CadastrosPage","CadastrosPage_regeneratorRuntime","ListCadastros_ListCadastros","ProfileEdit","profileEdit","disabled","ProfileInfo","ProfilePage","openProfileEdit","setOpenProfileEdit","ProfileInfo_ProfileInfo","ProfileEdit_ProfileEdit","AboutPage","fa_index_esm","App","react_router","path","element","pages_LoginPage_LoginPage","pages_RegisterPage_RegisterPage","HomePage_HomePage_HomePage","MedicosPage_MedicosPage_MedicosPage","PacientesPage_PacientesPage","CadastrosPage_CadastrosPage","ProfilePage_ProfilePage","AboutPage_AboutPage_AboutPage","ReactDOM","createRoot","render","StrictMode","src_App_0"],"mappings":"kwNAIO,IAAMA,EAAY,WAIvB,IAJ6BC,EAQDC,mBAJN,CACpBC,MAAS,GACTC,MAAS,KANkBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GAQtBO,EARsBH,EAAA,GAQdI,EARcJ,EAAA,GAUzBK,GAAa,EAVYC,EAaLT,mBAAS,IAbJU,EAAAN,OAAAC,EAAA,EAAAD,CAAAK,EAAA,GAatBE,EAbsBD,EAAA,GAahBE,EAbgBF,EAAA,GAgBzBG,EAAWC,cAEf,SAASC,EAASC,GAAO,IAAAC,EACFD,EAAME,OAArBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MAEZb,EAAUH,OAAAiB,EAAA,EAAAjB,CAAA,GAAIE,EAALF,OAAAkB,EAAA,EAAAlB,CAAA,GAAce,EAAOC,KA+BhC,OATAG,oBAAU,WAEVnB,OAAAoB,EAAA,EAAApB,CAAAqB,IAAAC,KAAC,SAAAC,IAAA,IAAAC,EAAAjB,EAAA,OAAAc,IAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACqBC,MAlCV,qDAiCX,cACSL,EADTE,EAAAI,KAAAJ,EAAAE,KAAA,EAEsBJ,EAAIO,OAF1B,OAESxB,EAFTmB,EAAAI,KAGGtB,EAAQD,GAHX,wBAAAmB,EAAAM,SAAAT,KAADvB,IAKE,IAGAiC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cACRH,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,SAAf,SACAJ,EAAAC,EAAAC,cAAA,SAAOxB,SAAUA,EAAU2B,KAAK,OAAOvB,KAAK,QAAQwB,YAAY,QAAQC,UAAQ,KAGlFP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,SAAf,SACAJ,EAAAC,EAAAC,cAAA,SAAOxB,SAAUA,EAAU2B,KAAK,WAAWvB,KAAK,QAAQwB,YAAY,QAAQC,UAAQ,KAGtFP,EAAAC,EAAAC,cAAA,UAAQM,QA1ClB,WACE,IACElC,EAAKmC,QAAQ,SAACC,GACTA,EAAK9C,QAAUK,EAAOL,OAAS8C,EAAK7C,QAAUI,EAAOJ,QACtD8C,MAAM,aAAaD,EAAKE,KAAK,KAC7BzC,GAAa,EACb0C,eAAeC,QAAQ,aAAcC,KAAKC,UAAUN,IACpDlC,EAAS,YAIf,MAAMyC,GACJN,MAAMM,IAGU,IAAf9C,GACDwC,MAAM,sBA0B2BR,UAAU,aAArC,SAEAH,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMC,GAAI,YAAahB,UAAU,iBAAjC,0CCpDGiB,EAfG,WAChB,OACEpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,2BAAeF,EAAAC,EAAAC,cAAA,WAAf,0BAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAACmB,EAAD,2xMCTV,IAAMC,EAAgB,CAClBV,KAAQ,GACRhD,MAAS,GACTC,MAAS,GACT0D,YAAe,GACfC,gBAAmB,GACnBC,SAAY,IAGVC,EAAM,oDAyGGC,EAtGM,WAAM,IAAAjE,EAECC,mBAAS2D,GAFVxD,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GAEpBO,EAFoBH,EAAA,GAEZI,EAFYJ,EAAA,GAAAM,EAGHT,mBAAS,IAHNU,EAAAN,OAAAC,EAAA,EAAAD,CAAAK,EAAA,GAGpBE,EAHoBD,EAAA,GAGdE,EAHcF,EAAA,GAIrBG,EAAWC,cAYb,SAASC,EAASC,GAAO,IAAAC,EACAD,EAAME,OAArBC,EADeF,EACfE,KAAMC,EADSH,EACTG,MAEZb,EAAUH,OAAAiB,EAAA,EAAAjB,CAAA,GAAIE,EAALF,OAAAkB,EAAA,EAAAlB,CAAA,GAAce,EAAOC,KAbtCG,oBAAU,WAENnB,OAAAoB,EAAA,EAAApB,CAAA6D,IAAAvC,KAAC,SAAAC,IAAA,IAAAC,EAAAjB,EAAA,OAAAsD,IAAApC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACqBC,MAAM8B,GAD3B,cACSnC,EADTE,EAAAI,KAAAJ,EAAAE,KAAA,EAEsBJ,EAAIO,OAF1B,OAESxB,EAFTmB,EAAAI,KAGGtB,EAAQD,GAHX,wBAAAmB,EAAAM,SAAAT,KAADvB,IAKE,IAgDJ,OACEiC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBACZH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACTH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,QAAf,QACAJ,EAAAC,EAAAC,cAAA,SAAOxB,SAAUA,EAAUmD,GAAG,gBAAgBxB,KAAK,OAAOvB,KAAK,OAAOwB,YAAY,OAAOC,UAAQ,KAEvGP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACTH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,SAAf,SACAJ,EAAAC,EAAAC,cAAA,SAAOxB,SAAUA,EAAU2B,KAAK,OAAOwB,GAAG,iBAAiB/C,KAAK,QAAQwB,YAAY,QAAQC,UAAQ,KAE1GP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACTH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,YAAf,SACAJ,EAAAC,EAAAC,cAAA,SAAOxB,SAAUA,EAAU2B,KAAK,WAAWwB,GAAG,WAAW/C,KAAK,QAAQwB,YAAY,QAAQC,UAAQ,KAExGP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAY0B,GAAG,mBAC1B7B,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,cAAf,kBACAJ,EAAAC,EAAAC,cAAA,UAAQxB,SAAUA,EAAUyB,UAAU,gBAAgBrB,KAAK,cAAc+C,GAAG,SAAStB,UAAQ,GACzFP,EAAAC,EAAAC,cAAA,yCACAF,EAAAC,EAAAC,cAAA,UAAQnB,MAAM,YAAd,YACAiB,EAAAC,EAAAC,cAAA,UAAQnB,MAAM,aAAd,aACAiB,EAAAC,EAAAC,cAAA,UAAQnB,MAAM,gBAAd,kBAGRiB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAY0B,GAAG,uBAC1B7B,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,kBAAf,wBACAJ,EAAAC,EAAAC,cAAA,SAAOxB,SAAUA,EAAU2B,KAAK,OAAOvB,KAAK,kBAAkB+C,GAAG,0BAA0BtB,UAAQ,KAEvGP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAY0B,GAAG,iBAC1B7B,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,YAAf,YACAJ,EAAAC,EAAAC,cAAA,SAAOxB,SAAUA,EAAU2B,KAAK,OAAOvB,KAAK,WAAW+C,GAAG,WAAWvB,YAAY,WAAWC,UAAQ,MAI5GP,EAAAC,EAAAC,cAAA,UAAQM,QA1EI,WACZ,IAAIsB,GAAY,EAChB,IACIxD,EAAKmC,QAAQ,SAACC,GACTA,EAAK9C,QAAUK,EAAOL,QACvBkE,GAAY,EACZnB,MAAM,8BAIZ,MAAMM,GACJN,MAAMM,GAGV,IAAMc,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CACLC,eAAgB,mBAChBC,8BAA+B,KAGnCC,KAAMrB,KAAKC,UAAU,CACjBJ,KAAM3C,EAAO2C,KACbhD,MAAOK,EAAOL,MACdC,MAAOI,EAAOJ,MACd0D,YAAatD,EAAOsD,YACpBC,gBAAiBvD,EAAOuD,gBACxBC,SAAUxD,EAAOwD,aAIR,IAAdK,IACClC,MAAM8B,EAAKK,GACVM,KAAK1B,MAAM,6CACX2B,MAAM,SAAAC,GAAI,OAAIC,QAAQC,IAAIF,KAC3B/D,EAAS,OAuCa6B,KAAK,SAASF,UAAU,gBAAlD,eCnGOuC,SARM,WACnB,OACE1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAACyC,EAAD,SCHOC,SAAgB,WACzB,IAAMC,EAAO9B,KAAK+B,MAAMjC,eAAekC,QAAQ,eACzCvE,EAAWC,cAcjB,OACIuB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,cAAkC0C,EAAKjC,KAAKoC,MAAM,KAAK,GAAvD,KACAhD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKM,QAjBrB,WACIhC,EAAS,aAgBkCqD,GAAG,MAAM1B,UAAU,cAC9CH,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,OAAK+C,IAAI,UAASC,IAAI,oCACtBlD,EAAAC,EAAAC,cAAA,iFAEJF,EAAAC,EAAAC,cAAA,OAAKM,QAlBrB,WACIhC,EAAS,eAiBoCqD,GAAG,MAAM1B,UAAU,gBAChDH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,OAAK+C,IAAI,YAAYC,IAAI,oCACzBlD,EAAAC,EAAAC,cAAA,4EAEJF,EAAAC,EAAAC,cAAA,OAAKM,QAnBrB,WACIhC,EAAS,eAkBoCqD,GAAG,MAAM1B,UAAU,gBAChDH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,OAAK+C,IAAI,YAAYC,IAAI,oCACzBlD,EAAAC,EAAAC,cAAA,uFCjCXiD,EAAS,WACpB,OACEnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO+C,IAAI,kCAAkCD,IAAI,SAChEjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMC,GAAI,QAAShB,UAAU,aAA7B,UACAH,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMC,GAAI,SAAUhB,UAAU,aAAaiD,KAAK,IAAhD,SACApD,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMC,GAAI,WAAYhB,UAAU,eAAeiD,KAAK,IAApD,cACApD,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMC,GAAI,IAAKX,QAAS,WAAMK,eAAeC,QAAQ,aAAc,KAAMX,UAAU,WAAWiD,KAAK,IAAnG,QAA2GpD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,WCT1GC,SAAW,WACtB,OACEtD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqD,EAAD,MACAvD,EAAAC,EAAAC,cAACsD,EAAD,yBCLOC,SAAa,SAAAC,GAAiBA,EAAfC,UAAe,IAAAjG,EAEfC,mBAASoD,KAAK+B,MAAMjC,eAAekC,QAAQ,UAF5BjF,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GAEhCmF,EAFgC/E,EAAA,GAE1B8F,EAF0B9F,EAAA,GAIvC,SAASY,EAASC,GAAO,IAAAC,EACAD,EAAME,OAArBC,EADeF,EACfE,KAAMC,EADSH,EACTG,MAEZ6E,EAAQ7F,OAAAiB,EAAA,EAAAjB,CAAA,GAAI8E,EAAL9E,OAAAkB,EAAA,EAAAlB,CAAA,GAAYe,EAAOC,KAG9B,IAAMgD,EAAiB,CACnBC,OAAQ,MACRC,QAAS,CACLC,eAAgB,mBAChBC,8BAA+B,KAGnCC,KAAMrB,KAAKC,UAAU,CACjBJ,KAAMiC,EAAKjC,KACXhD,MAAOiF,EAAKjF,MACZiG,cAAehB,EAAKgB,cACpBC,SAAUjB,EAAKjF,SAazB,OACEoC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBACZH,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OAAK2B,GAAG,UAAU1B,UAAU,aACxBH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,MAAf,MACAJ,EAAAC,EAAAC,cAAA,SAAO6D,UAAQ,EAACrF,SAAUA,EAAWK,MAAO8D,EAAKhB,GAAIxB,KAAK,OAAOwB,GAAG,UAAU/C,KAAK,KAAKwB,YAAY,OAExGN,EAAAC,EAAAC,cAAA,OAAK2B,GAAG,YAAY1B,UAAU,aAC1BH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,QAAf,QACAJ,EAAAC,EAAAC,cAAA,SAAOxB,SAAUA,EAAWK,MAAO8D,EAAKjC,KAAMiB,GAAG,YAAYxB,KAAK,OAAOvB,KAAK,OAAOwB,YAAY,WAGzGN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,iBAAf,iBACAJ,EAAAC,EAAAC,cAAA,SAAOxB,SAAUA,EAAUK,MAAO8D,EAAKgB,cAAexD,KAAK,OAAOwB,GAAG,qBAAqB/C,KAAK,gBAAgBwB,YAAY,mBAE/HN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,SAAf,SACAJ,EAAAC,EAAAC,cAAA,SAAOxB,SAAUA,EAAUK,MAAO8D,EAAKjF,MAAOyC,KAAK,OAAOwB,GAAG,aAAa/C,KAAK,QAAQwB,YAAY,YAI3GN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAAcK,QAlChC,WACR,IAAMkB,EAAM,yDAAyDmB,EAAKhB,GAE1EjC,MAAM8B,EAAKK,GACVM,KAAK1B,MAAM,2CACX2B,MAAM,SAAA0B,GAAK,OAAIxB,QAAQC,IAAIuB,OA6BpB,WACAhE,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAeK,QAAS,YAAiB,IAA3D,iBC/DHyD,EAAe,SAAAP,GAAmBA,EAAjBQ,YAAiB,IAAAxG,EAGnBC,mBAAS,IAHUG,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GAGpCmF,EAHoC/E,EAAA,GAG9B8F,EAH8B9F,EAAA,GAIrCiE,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CACLC,eAAgB,mBAChBC,8BAA+B,KAGnCC,KAAMrB,KAAKC,UAAU,CACjBJ,KAAMiC,EAAKjC,KACXhD,MAAOiF,EAAKjF,MACZiG,cAAehB,EAAKgB,cACpBC,SAAUjB,EAAKjF,SAKvB,SAASc,EAASC,GAAO,IAAAC,EACAD,EAAME,OAArBC,EADeF,EACfE,KAAMC,EADSH,EACTG,MAEZ6E,EAAQ7F,OAAAiB,EAAA,EAAAjB,CAAA,GAAI8E,EAAL9E,OAAAkB,EAAA,EAAAlB,CAAA,GAAYe,EAAOC,KAQhC,OACEiB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBACZH,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OAAK2B,GAAG,UAAU1B,UAAU,aACxBH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,MAAf,MACAJ,EAAAC,EAAAC,cAAA,SAAO6D,UAAQ,EAACrF,SAAUA,EAAWK,MAAO8D,EAAKhB,GAAIxB,KAAK,OAAOwB,GAAG,UAAU/C,KAAK,KAAKwB,YAAY,OAExGN,EAAAC,EAAAC,cAAA,OAAK2B,GAAG,YAAY1B,UAAU,aAC1BH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,QAAf,QACAJ,EAAAC,EAAAC,cAAA,SAAOxB,SAAUA,EAAWK,MAAO8D,EAAKjC,KAAMiB,GAAG,YAAYxB,KAAK,OAAOvB,KAAK,OAAOwB,YAAY,WAGzGN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,iBAAf,iBACAJ,EAAAC,EAAAC,cAAA,SAAOxB,SAAUA,EAAUK,MAAO8D,EAAKgB,cAAexD,KAAK,OAAOwB,GAAG,qBAAqB/C,KAAK,gBAAgBwB,YAAY,mBAE/HN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,SAAf,SACAJ,EAAAC,EAAAC,cAAA,SAAOxB,SAAUA,EAAUK,MAAO8D,EAAKjF,MAAOyC,KAAK,OAAOwB,GAAG,aAAa/C,KAAK,QAAQwB,YAAY,YAI3GN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAAcK,QA/B/B,WACTZ,MAzBQ,wDAyBGmC,GACVM,KAAK1B,MAAM,2CACX2B,MAAM,SAAA0B,GAAK,OAAIxB,QAAQC,IAAIuB,OA4BpB,WACAhE,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAeK,QAAS,YAAmB,IAA7D,gBClDH2D,EAAc,SAAAT,GAAY,IAAVpF,EAAUoF,EAAVpF,KAAUZ,EACHC,oBAAS,GADNG,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GAC5B0G,EAD4BtG,EAAA,GAClBuG,EADkBvG,EAAA,GAAAM,EAECT,oBAAS,GAFVU,EAAAN,OAAAC,EAAA,EAAAD,CAAAK,EAAA,GAE5BkG,EAF4BjG,EAAA,GAEhBkG,EAFgBlG,EAAA,GAyBrC,OACE2B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAuE,SAAA,KACKF,GAActE,EAAAC,EAAAC,cAACuE,EAAD,CAAcd,UAAWY,IACvCH,GAAYpE,EAAAC,EAAAC,cAACwE,EAAD,CAAYf,UAAWU,IAEpCrE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,UAAQ2B,GAAG,cAAcrB,QAAS,WAAK6D,GAAY,GAAQE,GAAc,GAAOI,SAASC,eAAe,eAAeC,MAAMC,QAAQ,QAAS3E,UAAU,kBAAxJ,yBAEJH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,UACQF,EAAAC,EAAAC,cAAA,MAAI2B,GAAG,MAAP,KACA7B,EAAAC,EAAAC,cAAA,MAAI2B,GAAG,QAAP,QACA7B,EAAAC,EAAAC,cAAA,MAAI2B,GAAG,iBAAP,iBACA7B,EAAAC,EAAAC,cAAA,MAAI2B,GAAG,SAAP,SACA7B,EAAAC,EAAAC,cAAA,MAAI2B,GAAG,SAAP,iBAGR7B,EAAAC,EAAAC,cAAA,aACC5B,EAAKyG,IAAI,SAACzG,GAAD,OACN0B,EAAAC,EAAAC,cAAA,MAAI8E,IAAK1G,EAAKuD,IACV7B,EAAAC,EAAAC,cAAA,MAAK2B,GAAG,MAAMvD,EAAKuD,IACnB7B,EAAAC,EAAAC,cAAA,MAAK2B,GAAG,QAAQvD,EAAKsC,MACrBZ,EAAAC,EAAAC,cAAA,MAAK2B,GAAG,iBAAiBvD,EAAKuF,eAC9B7D,EAAAC,EAAAC,cAAA,MAAK2B,GAAG,SAASvD,EAAKV,OACtBoC,EAAAC,EAAAC,cAAA,MAAK2B,GAAG,SAAQ7B,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAQ7C,QAAS,YA9CjD,SAAkBlC,GACd+F,GAAY,GACZE,GAAc,GACd1D,eAAeC,QAAQ,OAAQC,KAAKC,UAAU1C,IA2CI2G,CAAQ3G,IAAQ6B,UAAU,aAAhE,IAA6EH,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAiB1E,QAAS,YAxCvH,SAAqBlC,GACjB,IAAI6G,EAAO,yCAAsC7G,EAAKsC,KAAK,KAC3D,IAA4B,IAAzBwE,OAAOC,QAAQF,GAAe,CAC7B,IAAMzD,EAAM,yDAAyDpD,EAAKuD,GAI1EjC,MAAM8B,EAHiB,CACnBM,OAAQ,WAGPK,KAAK1B,MAAM,2CACX2B,MAAM,SAAAC,GAAI,OAAIC,QAAQC,IAAIF,MA+BuF+C,CAAWhH,IAAQ6B,UAAU,8yMCrDxJ,IAAMoF,EAAc,WAEvB,IAF6B7H,EAGLC,mBAAS,IAHJG,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GAGtB8H,EAHsB1H,EAAA,GAGhB2H,EAHgB3H,EAAA,GAc/B,OAREoB,oBAAU,WACNnB,OAAAoB,EAAA,EAAApB,CAAA2H,IAAArG,KAAC,SAAAC,IAAA,IAAAC,EAAAjB,EAAA,OAAAoH,IAAAlG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACqBC,MANd,yDAKP,cACSL,EADTE,EAAAI,KAAAJ,EAAAE,KAAA,EAEsBJ,EAAIO,OAF1B,OAESxB,EAFTmB,EAAAI,KAGG4F,EAAQnH,GAHX,wBAAAmB,EAAAM,SAAAT,KAADvB,IAKE,IAGNiC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACqD,EAAD,MACAvD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAACyF,EAAD,CAAarH,KAAMkH,QCxBtBI,SAAiB,SAAAlC,GAAmBA,EAAjBQ,YAAiB,IAAAxG,EAGrBC,mBAAS,IAHYG,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GAGtCmF,EAHsC/E,EAAA,GAGhC8F,EAHgC9F,EAAA,GAIvCiE,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CACLC,eAAgB,mBAChBC,8BAA+B,KAGnCC,KAAMrB,KAAKC,UAAU,CACjBJ,KAAMiC,EAAKjC,KACXiF,IAAKhD,EAAKgD,IACVC,eAAgBjD,EAAKiD,eACrBrE,SAAUoB,EAAKpB,SACf7D,MAAOiF,EAAKjF,MACZmI,SAAUlD,EAAKkD,SACfC,YAAanD,EAAKmD,eAK1B,SAAStH,EAASC,GAAO,IAAAC,EACAD,EAAME,OAArBC,EADeF,EACfE,KAAMC,EADSH,EACTG,MAEZ6E,EAAQ7F,OAAAiB,EAAA,EAAAjB,CAAA,GAAI8E,EAAL9E,OAAAkB,EAAA,EAAAlB,CAAA,GAAYe,EAAOC,KAShC,OACEiB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBACZH,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OAAK2B,GAAG,UAAU1B,UAAU,aACxBH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,MAAf,MACAJ,EAAAC,EAAAC,cAAA,SAAO6D,UAAQ,EAACrF,SAAUA,EAAU2B,KAAK,OAAOwB,GAAG,UAAU/C,KAAK,KAAKwB,YAAY,OAEvFN,EAAAC,EAAAC,cAAA,OAAK2B,GAAG,YAAY1B,UAAU,aAC1BH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,QAAf,QACAJ,EAAAC,EAAAC,cAAA,SAAOxB,SAAUA,EAAUmD,GAAG,YAAYxB,KAAK,OAAOvB,KAAK,OAAOwB,YAAY,UAElFN,EAAAC,EAAAC,cAAA,OAAK2B,GAAG,WAAW1B,UAAU,aACzBH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,OAAf,OACAJ,EAAAC,EAAAC,cAAA,SAAOxB,SAAUA,EAAUmD,GAAG,WAAWxB,KAAK,OAAOvB,KAAK,MAAMwB,YAAY,SAEhFN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAY0B,GAAG,kBAC1B7B,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,kBAAf,wBACAJ,EAAAC,EAAAC,cAAA,SAAOxB,SAAUA,EAAW2B,KAAK,OAAOvB,KAAK,iBAAiB+C,GAAG,yBAErE7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAY0B,GAAG,uBAC1B7B,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,eAAf,qBACAJ,EAAAC,EAAAC,cAAA,SAAOxB,SAAUA,EAAU2B,KAAK,OAAOvB,KAAK,cAAc+C,GAAG,uBAGrE7B,EAAAC,EAAAC,cAAA,OAAK2B,GAAG,OAAM1B,UAAU,QACpBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,YAAf,YACAJ,EAAAC,EAAAC,cAAA,SAAOxB,SAAUA,EAAW2B,KAAK,OAAOwB,GAAG,gBAAgB/C,KAAK,WAAWwB,YAAY,cAE3FN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,SAAf,SACAJ,EAAAC,EAAAC,cAAA,SAAOxB,SAAUA,EAAU2B,KAAK,OAAOwB,GAAG,aAAa/C,KAAK,QAAQwB,YAAY,WAEpFN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,YAAf,YACAJ,EAAAC,EAAAC,cAAA,SAAOxB,SAAUA,EAAW2B,KAAK,OAAOwB,GAAG,gBAAgB/C,KAAK,WAAWwB,YAAY,eAI/FN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAAcK,QAhD/B,WACTgC,QAAQC,IAAII,GACZjD,MA7BQ,0DA6BGmC,GACVM,KAAK1B,MAAM,2CACX2B,MAAM,SAAA0B,GAAK,OAAIxB,QAAQC,IAAIuB,OA4CpB,WACAhE,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAeK,QAAS,YAAmB,IAA7D,iBC9EHyF,EAAe,SAAAvC,GAAiBA,EAAfC,UAAe,IAAAjG,EACjBC,mBAASoD,KAAK+B,MAAMjC,eAAekC,QAAQ,UAD1BjF,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GAClCmF,EADkC/E,EAAA,GAC5B8F,EAD4B9F,EAAA,GAGzC,SAASY,EAASC,GAAO,IAAAC,EACAD,EAAME,OAArBC,EADeF,EACfE,KAAMC,EADSH,EACTG,MAEZ6E,EAAQ7F,OAAAiB,EAAA,EAAAjB,CAAA,GAAI8E,EAAL9E,OAAAkB,EAAA,EAAAlB,CAAA,GAAYe,EAAOC,KAG9B,IAAMgD,EAAiB,CACnBC,OAAQ,MACRC,QAAS,CACLC,eAAgB,mBAChBC,8BAA+B,KAGnCC,KAAMrB,KAAKC,UAAU,CACjBJ,KAAMiC,EAAKjC,KACXiF,IAAKhD,EAAKgD,IACVC,eAAgBjD,EAAKiD,eACrBrE,SAAUoB,EAAKpB,SACf7D,MAAOiF,EAAKjF,MACZmI,SAAUlD,EAAKkD,SACfC,YAAanD,EAAKmD,eAW5B,OACEhG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,QAAM2B,GAAG,wBAAwB1B,UAAU,kBACvCH,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OAAK2B,GAAG,UAAU1B,UAAU,aACxBH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,MAAf,MACAJ,EAAAC,EAAAC,cAAA,SAAO6D,UAAQ,EAACrF,SAAUA,EAAWK,MAAO8D,EAAKhB,GAAIxB,KAAK,OAAOwB,GAAG,UAAU/C,KAAK,KAAKwB,YAAY,OAExGN,EAAAC,EAAAC,cAAA,OAAK2B,GAAG,YAAY1B,UAAU,aAC1BH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,QAAf,QACAJ,EAAAC,EAAAC,cAAA,SAAOxB,SAAUA,EAAWK,MAAO8D,EAAKjC,KAAMiB,GAAG,YAAYxB,KAAK,OAAOvB,KAAK,OAAOwB,YAAY,UAErGN,EAAAC,EAAAC,cAAA,OAAK2B,GAAG,WAAW1B,UAAU,aACzBH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,OAAf,OACAJ,EAAAC,EAAAC,cAAA,SAAOxB,SAAUA,EAAWK,MAAO8D,EAAKgD,IAAKhE,GAAG,WAAWxB,KAAK,OAAOvB,KAAK,MAAMwB,YAAY,SAElGN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAY0B,GAAG,kBAC1B7B,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,kBAAf,wBACAJ,EAAAC,EAAAC,cAAA,SAAOxB,SAAUA,EAAUK,MAAO8D,EAAKiD,eAAgBzF,KAAK,OAAOvB,KAAK,kBAAkB+C,GAAG,yBAEjG7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAY0B,GAAG,uBAC1B7B,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,eAAf,qBACAJ,EAAAC,EAAAC,cAAA,SAAOxB,SAAUA,EAAUK,MAAO8D,EAAKmD,YAAa3F,KAAK,OAAOvB,KAAK,eAAe+C,GAAG,uBAG/F7B,EAAAC,EAAAC,cAAA,OAAK2B,GAAG,OAAM1B,UAAU,QACpBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,YAAf,YACAJ,EAAAC,EAAAC,cAAA,SAAOxB,SAAUA,EAAUK,MAAO8D,EAAKpB,SAAUpB,KAAK,OAAOwB,GAAG,gBAAgB/C,KAAK,WAAWwB,YAAY,cAEhHN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,SAAf,SACAJ,EAAAC,EAAAC,cAAA,SAAOxB,SAAUA,EAAUK,MAAO8D,EAAKjF,MAAOyC,KAAK,OAAOwB,GAAG,aAAa/C,KAAK,QAAQwB,YAAY,WAEvGN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,YAAf,YACAJ,EAAAC,EAAAC,cAAA,SAAOxB,SAAUA,EAAUK,MAAO8D,EAAKkD,SAAU1F,KAAK,OAAOwB,GAAG,gBAAgB/C,KAAK,WAAWwB,YAAY,eAIpHN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAAcK,QAjDhC,WACR,IAAMkB,EAAM,2DAA2DmB,EAAKhB,GAE5EjC,MAAM8B,EAAKK,GACVM,KAAK1B,MAAM,2CACX2B,MAAM,SAAA0B,GAAK,OAAIxB,QAAQC,IAAIuB,OA4CpB,WACAhE,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAeK,QAAS,YAAiB,IAA3D,gBCxEH0F,EAAgB,SAAAxC,GAAY,IAAVpF,EAAUoF,EAAVpF,KAAUZ,EAELC,oBAAS,GAFJG,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GAE9B0G,EAF8BtG,EAAA,GAEpBuG,EAFoBvG,EAAA,GAAAM,EAGDT,oBAAS,GAHRU,EAAAN,OAAAC,EAAA,EAAAD,CAAAK,EAAA,GAG9BkG,EAH8BjG,EAAA,GAGlBkG,EAHkBlG,EAAA,GAwBvC,OACE2B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAuE,SAAA,KACKF,GAActE,EAAAC,EAAAC,cAACiG,EAAD,CAAgBxC,UAAWY,IACzCH,GAAYpE,EAAAC,EAAAC,cAACkG,EAAD,CAAczC,UAAWU,IACtCrE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,UAAQ2B,GAAG,cAAcrB,QAAS,WAAK6D,GAAY,GAAQE,GAAc,GAAOI,SAASC,eAAe,eAAeC,MAAMC,QAAQ,QAAS3E,UAAU,kBAAxJ,wBAEJH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,UACQF,EAAAC,EAAAC,cAAA,MAAI2B,GAAG,eAAP,KACA7B,EAAAC,EAAAC,cAAA,MAAI2B,GAAG,iBAAP,QACA7B,EAAAC,EAAAC,cAAA,MAAI2B,GAAG,gBAAP,OACA7B,EAAAC,EAAAC,cAAA,MAAI2B,GAAG,2BAAP,sBACA7B,EAAAC,EAAAC,cAAA,MAAI2B,GAAG,qBAAP,YACA7B,EAAAC,EAAAC,cAAA,MAAI2B,GAAG,kBAAP,SACA7B,EAAAC,EAAAC,cAAA,MAAI2B,GAAG,qBAAP,YACA7B,EAAAC,EAAAC,cAAA,MAAI2B,GAAG,wBAAP,gBACA7B,EAAAC,EAAAC,cAAA,MAAI2B,GAAG,kBAAP,iBAGR7B,EAAAC,EAAAC,cAAA,aACC5B,EAAKyG,IAAI,SAACzG,GAAD,OACN0B,EAAAC,EAAAC,cAAA,MAAI8E,IAAK1G,EAAKuD,IACV7B,EAAAC,EAAAC,cAAA,MAAK2B,GAAG,eAAevD,EAAKuD,IAC5B7B,EAAAC,EAAAC,cAAA,MAAK2B,GAAG,iBAAiBvD,EAAKsC,MAC9BZ,EAAAC,EAAAC,cAAA,MAAK2B,GAAG,gBAAgBvD,EAAKuH,KAC7B7F,EAAAC,EAAAC,cAAA,MAAK2B,GAAG,2BAA2BvD,EAAKwH,gBACxC9F,EAAAC,EAAAC,cAAA,MAAK2B,GAAG,qBAAqBvD,EAAKmD,UAClCzB,EAAAC,EAAAC,cAAA,MAAK2B,GAAG,kBAAkBvD,EAAKV,OAC/BoC,EAAAC,EAAAC,cAAA,MAAK2B,GAAG,qBAAqBvD,EAAKyH,UAClC/F,EAAAC,EAAAC,cAAA,MAAK2B,GAAG,wBAAwBvD,EAAK0H,aACrChG,EAAAC,EAAAC,cAAA,MAAK2B,GAAG,kBAAiB7B,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAQ7C,QAAS,YAnD1D,SAAkBlC,GACd+F,GAAY,GACZE,GAAc,GACd1D,eAAeC,QAAQ,OAAQC,KAAKC,UAAU1C,IAgDa2G,CAAQ3G,IAAQ6B,UAAU,aAAzE,IAAsFH,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAiB1E,QAAS,YA7ChI,SAAqBlC,GACjB,IAAI6G,EAAO,yCAAsC7G,EAAKsC,KAAK,KAC3D,IAA4B,IAAzBwE,OAAOC,QAAQF,GAAe,CAC7B,IAAMzD,EAAM,2DAA2DpD,EAAKuD,GAI5EjC,MAAM8B,EAHiB,CACnBM,OAAQ,WAGPK,KAAK1B,MAAM,2CACX2B,MAAM,SAAAC,GAAI,OAAIC,QAAQC,IAAIF,MAoCgG+C,CAAWhH,IAAQ6B,UAAU,wyMC3DjK,IAAMkG,EAAgB,WAE3B,IAFiC3I,EAGPC,mBAAS,IAHFG,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GAGxB8H,EAHwB1H,EAAA,GAGlB2H,EAHkB3H,EAAA,GAcjC,OAREoB,oBAAU,WACNnB,OAAAoB,EAAA,EAAApB,CAAAuI,IAAAjH,KAAC,SAAAC,IAAA,IAAAC,EAAAjB,EAAA,OAAAgI,IAAA9G,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACqBC,MANhB,2DAKL,cACSL,EADTE,EAAAI,KAAAJ,EAAAE,KAAA,EAEsBJ,EAAIO,OAF1B,OAESxB,EAFTmB,EAAAI,KAGG4F,EAAQnH,GAHX,wBAAAmB,EAAAM,SAAAT,KAADvB,IAKE,IAGNiC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACqD,EAAD,MACAvD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAACqG,EAAD,CAAejI,KAAMkH,QCrBxBgB,EAAgB,SAAA9C,GAAY,IAAVpF,EAAUoF,EAAVpF,KAC7B,OACE0B,EAAAC,EAAAC,cAAA,WAEIF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,UACQF,EAAAC,EAAAC,cAAA,MAAI2B,GAAG,MAAP,KACA7B,EAAAC,EAAAC,cAAA,MAAI2B,GAAG,QAAP,QACA7B,EAAAC,EAAAC,cAAA,MAAI2B,GAAG,SAAP,SACA7B,EAAAC,EAAAC,cAAA,MAAI2B,GAAG,YAAP,YACA7B,EAAAC,EAAAC,cAAA,MAAI2B,GAAG,mBAAP,sBACA7B,EAAAC,EAAAC,cAAA,MAAI2B,GAAG,eAAP,UAGR7B,EAAAC,EAAAC,cAAA,aACC5B,EAAKyG,IAAI,SAACzG,GAAD,OACN0B,EAAAC,EAAAC,cAAA,MAAI8E,IAAK1G,EAAKuD,IACV7B,EAAAC,EAAAC,cAAA,MAAK2B,GAAG,MAAMvD,EAAKuD,IACnB7B,EAAAC,EAAAC,cAAA,MAAK2B,GAAG,QAAQvD,EAAKsC,MACrBZ,EAAAC,EAAAC,cAAA,MAAK2B,GAAG,SAASvD,EAAKV,OACtBoC,EAAAC,EAAAC,cAAA,MAAK2B,GAAG,YAAYvD,EAAKmD,UACzBzB,EAAAC,EAAAC,cAAA,MAAK2B,GAAG,mBAAmBvD,EAAKkD,iBAChCxB,EAAAC,EAAAC,cAAA,MAAK2B,GAAG,eAAevD,EAAKiD,qyMCnBzC,IAAMkF,EAAgB,WAE3B,IAFiC/I,EAGTC,mBAAS,IAHAG,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GAG1B8H,EAH0B1H,EAAA,GAGpB2H,EAHoB3H,EAAA,GAejC,OATAoB,oBAAU,WACNnB,OAAAoB,EAAA,EAAApB,CAAA2I,IAAArH,KAAC,SAAAC,IAAA,IAAAC,EAAAjB,EAAA,OAAAoI,IAAAlH,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACqBC,MANd,qDAKP,cACSL,EADTE,EAAAI,KAAAJ,EAAAE,KAAA,EAEsBJ,EAAIO,OAF1B,OAESxB,EAFTmB,EAAAI,KAGG4F,EAAQnH,GAHX,wBAAAmB,EAAAM,SAAAT,KAADvB,IAKE,IAIJiC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACqD,EAAD,MACAvD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAACyG,EAAD,CAAerI,KAAMkH,QCxBxBoB,EAAc,SAAAlD,GAAmB,IAAjBmD,EAAiBnD,EAAjBmD,YAAiBnJ,EAClBC,mBAASoD,KAAK+B,MAAMjC,eAAekC,QAAQ,gBADzBjF,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GACnCmF,EADmC/E,EAAA,GAC7B8F,EAD6B9F,EAAA,GAGpCiE,EAAiB,CACnBC,OAAQ,MACRC,QAAS,CACLC,eAAgB,mBAChBC,8BAA+B,KAGnCC,KAAMrB,KAAKC,UAAU,CACjBJ,KAAMiC,EAAKjC,KACXhD,MAAOiF,EAAKjF,MACZC,MAAOgF,EAAKhF,MACZ2D,gBAAiBqB,EAAKrB,gBACtBC,SAAUoB,EAAKpB,SACfF,YAAasB,EAAKtB,eAkB1B,SAAS7C,EAASC,GAAO,IAAAC,EACFD,EAAME,OAArBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MAEZ6E,EAAQ7F,OAAAiB,EAAA,EAAAjB,CAAA,GAAI8E,EAAL9E,OAAAkB,EAAA,EAAAlB,CAAA,GAAYe,EAAOC,KAE5B,OACEiB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACfH,EAAAC,EAAAC,cAAA,sCACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAEjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,2CACEF,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,QAAf,QACAJ,EAAAC,EAAAC,cAAA,SAAOxB,SAAUA,EAAWK,MAAO8D,EAAKjC,KAAKiB,GAAG,eAAexB,KAAK,OAAOvB,KAAK,OAAOwB,YAAY,OAAOC,UAAQ,KAEtHP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,SAAf,SACAJ,EAAAC,EAAAC,cAAA,SAAOxB,SAAUA,EAAWK,MAAO8D,EAAKjF,MAAOyC,KAAK,OAAOwB,GAAG,gBAAgB/C,KAAK,QAAQwB,YAAY,QAAQC,UAAQ,KAEzHP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,cAAf,kBACAJ,EAAAC,EAAAC,cAAA,UAAQxB,SAAUA,EAAUK,MAAO8D,EAAKtB,YAAYpB,UAAU,gBAAgBrB,KAAK,cAAc+C,GAAG,SAAStB,UAAQ,GACjHP,EAAAC,EAAAC,cAAA,UAAQ4G,UAAQ,GAAhB,2BACA9G,EAAAC,EAAAC,cAAA,UAAQnB,MAAM,YAAd,YACAiB,EAAAC,EAAAC,cAAA,UAAQnB,MAAM,aAAd,aACAiB,EAAAC,EAAAC,cAAA,UAAQnB,MAAM,gBAAd,kBAGJiB,EAAAC,EAAAC,cAAA,OAAK2B,GAAG,cAAc1B,UAAU,aAC5BH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,mBAAf,sBACAJ,EAAAC,EAAAC,cAAA,SAAOxB,SAAUA,EAAWK,MAAO8D,EAAKrB,gBAAiBnB,KAAK,OAAOwB,GAAG,0BAA0B/C,KAAK,kBAAkBwB,YAAY,yBAG3IN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,eAAf,YACAJ,EAAAC,EAAAC,cAAA,SAAOxB,SAAUA,EAAWK,MAAO8D,EAAKpB,SAAUpB,KAAK,OAAOwB,GAAG,mBAAmB/C,KAAK,WAAWwB,YAAY,WAAWC,UAAQ,KAErIP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,eAAf,SACAJ,EAAAC,EAAAC,cAAA,SAAOxB,SAAUA,EAAWK,MAAO8D,EAAKhF,MAAOwC,KAAK,WAAWwB,GAAG,gBAAgB/C,KAAK,QAAQwB,YAAY,QAAQC,UAAQ,KAG7HP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,UAAQM,QA7DZ,WACR,IAAMkB,EAAM,qDAAqDmB,EAAKhB,IAEP,IAA5DuD,OAAOC,QAAQ,2CACdzF,MAAM8B,EAAKK,GACNM,KAAK1B,MAAM,2CACX2B,MAAM,SAAA0B,GAAK,OAAIxB,QAAQC,IAAIuB,KAEhCnD,eAAeC,QAAQ,aAAcC,KAAKC,UAAU6B,IACpDgE,GAAY,KAoDkB1G,UAAU,cAAhC,UACAH,EAAAC,EAAAC,cAAA,UAAQM,QAAS,WAAMqG,GAAY,IAAS1G,UAAU,eAAtD,+BChFP4G,SAAc,SAAArD,GAAmB,IAAjBmD,EAAiBnD,EAAjBmD,YAAiBnJ,EAEpBC,mBAASoD,KAAK+B,MAAMjC,eAAekC,QAAQ,gBAFvBjF,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GAErCmF,EAFqC/E,EAAA,GAE/B8F,EAF+B9F,EAAA,GAGtCU,EAAWC,cAiBjB,SAASC,EAASC,GAAO,IAAAC,EACFD,EAAME,OAArBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MAEZ6E,EAAQ7F,OAAAiB,EAAA,EAAAjB,CAAA,GAAI8E,EAAL9E,OAAAkB,EAAA,EAAAlB,CAAA,GAAYe,EAAOC,KAE5B,OACEiB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAEjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,+BACEF,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,QAAf,QACAJ,EAAAC,EAAAC,cAAA,SAAOxB,SAAUA,EAAUqF,UAAQ,EAAChF,MAAO8D,EAAKjC,KAAKiB,GAAG,eAAexB,KAAK,OAAOvB,KAAK,OAAOwB,YAAY,OAAOC,UAAQ,KAE9HP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,SAAf,SACAJ,EAAAC,EAAAC,cAAA,SAAOxB,SAAUA,EAAUqF,UAAQ,EAAChF,MAAO8D,EAAKjF,MAAOyC,KAAK,OAAOwB,GAAG,gBAAgB/C,KAAK,QAAQwB,YAAY,QAAQC,UAAQ,KAEjIP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,eAAf,gBACAJ,EAAAC,EAAAC,cAAA,SAAOxB,SAAUA,EAAUqF,UAAQ,EAAChF,MAAO8D,EAAKtB,YAAalB,KAAK,OAAOwB,GAAG,sBAAsB/C,KAAK,QAAQwB,YAAY,QAAQC,UAAQ,KAE7IP,EAAAC,EAAAC,cAAA,OAAK2B,GAAG,cAAc1B,UAAU,aAC9BH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,mBAAf,sBACAJ,EAAAC,EAAAC,cAAA,SAAOxB,SAAUA,EAAUqF,UAAQ,EAAChF,MAAO8D,EAAKrB,gBAAiBnB,KAAK,OAAOwB,GAAG,0BAA0B/C,KAAK,kBAAkBwB,YAAY,qBAAqBC,UAAQ,MAG9KP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,eAAf,YACAJ,EAAAC,EAAAC,cAAA,SAAOxB,SAAUA,EAAUqF,UAAQ,EAAChF,MAAO8D,EAAKpB,SAAUpB,KAAK,OAAOwB,GAAG,mBAAmB/C,KAAK,WAAWwB,YAAY,WAAWC,UAAQ,KAE7IP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,eAAf,SACAJ,EAAAC,EAAAC,cAAA,SAAOxB,SAAUA,EAAUqF,UAAQ,EAAChF,MAAO8D,EAAKhF,MAAOwC,KAAK,WAAWwB,GAAG,gBAAgB/C,KAAK,QAAQwB,YAAY,QAAQC,UAAQ,KAGrIP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,UAAQM,QAAS,WAAKqG,GAAY,IAAQ1G,UAAU,cAApD,gBACAH,EAAAC,EAAAC,cAAA,UAAQM,QAAS,YA3DjC,SAAqBlC,GACnB,IAAI6G,EAAO,yCAAsCtC,EAAKjC,KAAK,MAC/B,IAAzBwE,OAAOC,QAAQF,KAKdvF,MAJY,qDAAqDtB,EAC1C,CACnB0D,OAAQ,WAGPK,KAAK1B,MAAM,2CACX2B,MAAM,SAAAC,GAAI,OAAIC,QAAQC,IAAIF,KAC3B1B,eAAeC,QAAQ,aAAa,IACpCtC,EAAS,MAgDoB8G,CAAWzC,EAAKhB,KAAM1B,UAAU,eAAvD,2BC/DL6G,EAAc,WAAM,IAAAtJ,EAEeC,oBAAU,GAFzBG,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GAExBuJ,EAFwBnJ,EAAA,GAEPoJ,EAFOpJ,EAAA,GAG/B,OACEkC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACqD,EAAD,OACE0D,GAAmBjH,EAAAC,EAAAC,cAACiH,EAAD,CAAaN,YAAaK,IAC9CD,GAAmBjH,EAAAC,EAAAC,cAACkH,EAAD,CAAaP,YAAaK,sBCRzCG,EAAY,WACvB,OACErH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACqD,EAAD,MACAvD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,2BACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,oCACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,mBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAK2B,GAAG,OAAOqB,IAAI,kCAAkCD,IAAI,mBACzDjD,EAAAC,EAAAC,cAAA,KAAG2B,GAAG,YAAN,2BACA7B,EAAAC,EAAAC,cAAA,KAAG2B,GAAG,SAAN,wCACA7B,EAAAC,EAAAC,cAAA,KAAG2B,GAAG,qBAAN,oDAAqE7B,EAAAC,EAAAC,cAAA,WAArE,sBAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAK2B,GAAG,OAAOqB,IAAI,kCAAkCD,IAAI,kBACzDjD,EAAAC,EAAAC,cAAA,KAAG2B,GAAG,YAAN,oCACA7B,EAAAC,EAAAC,cAAA,KAAG2B,GAAG,SAAN,sCACA7B,EAAAC,EAAAC,cAAA,KAAG2B,GAAG,qBAAN,0DAGR7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,oJACAF,EAAAC,EAAAC,cAAA,WADA,iIAC6HF,EAAAC,EAAAC,cAAA,KAAGkD,KAAK,cAAR,UAD7H,kJAEsFpD,EAAAC,EAAAC,cAAA,4BAFtF,+GAGiCF,EAAAC,EAAAC,cAAA,WAHjC,uEAGuGF,EAAAC,EAAAC,cAAA,mBAHvG,2CAIAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAciD,KAAK,8DAA6DpD,EAAAC,EAAAC,cAACoH,EAAA,EAAD,MAA7F,uCCHDC,EAjBH,WACV,OACEvH,EAAAC,EAAAC,cAACgB,EAAA,EAAD,KACElB,EAAAC,EAAAC,cAACsH,EAAA,EAAD,KACExH,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAOC,KAAK,IAAIC,QAAS1H,EAAAC,EAAAC,cAACyH,EAAD,QACzB3H,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAOC,KAAK,YAAYC,QAAW1H,EAAAC,EAAAC,cAAC0H,EAAD,QACnC5H,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAOC,KAAK,QAAQC,QAAW1H,EAAAC,EAAAC,cAAC2H,EAAD,QAC/B7H,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAOC,KAAK,WAAWC,QAAW1H,EAAAC,EAAAC,cAAC4H,EAAD,QAClC9H,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAOC,KAAK,aAAaC,QAAW1H,EAAAC,EAAAC,cAAC6H,EAAD,QACpC/H,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAOC,KAAK,aAAaC,QAAW1H,EAAAC,EAAAC,cAAC8H,EAAD,QACpChI,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAOC,KAAK,WAAWC,QAAW1H,EAAAC,EAAAC,cAAC+H,EAAD,QAClCjI,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAOC,KAAK,SAASC,QAAW1H,EAAAC,EAAAC,cAACgI,EAAD,WCpB3BC,IAASC,WAAWzD,SAASC,eAAe,SACpDyD,OACHrI,EAAAC,EAAAC,cAACF,EAAAC,EAAMqI,WAAP,KACEtI,EAAAC,EAAAC,cAACqI,EAAD","file":"static/js/main.54371961.chunk.js","sourcesContent":["import React, {useState, useEffect}from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport './LoginForm.css';\n\nexport const LoginForm = () => {\n\n\n\n  const inicialValues = {\n    \"email\": \"\",\n    \"senha\": \"\"\n  }\n  const [values, setValues] = useState(inicialValues);\n\n  var registered = false;\n\n  const url = \"https://ufg-cadastros-api.herokuapp.com/cadastros\";\n  const [data, setData] = useState([]);\n\n\n  let navigate = useNavigate();\n\n  function onChange(event) {\n    const{name, value} = event.target;\n\n    setValues({...values, [name]: value}); \n}\n  function tryLogin() {\n    try{\n      data.forEach((item) => {\n        if(item.email === values.email && item.senha === values.senha){\n          alert(\"Bem vindo \"+item.nome+\"!\");\n          registered = true;\n          sessionStorage.setItem('activeUser', JSON.stringify(item));\n          navigate(\"/home\");\n        }\n      })\n    }\n    catch(e){\n      alert(e)\n    };\n\n    if(registered === false){\n      alert(\"Dados incorretos!\");\n    }\n  }\n\n  useEffect(() =>{\n\n  (async () =>{\n      const res = await fetch(url);\n      const data = await res.json();\n      setData(data);\n    })();\n  },[]);\n\n  return (\n    <form className=\"login-form\">       \n            <h1>LOGIN</h1>\n            <div className=\"textfield\">\n              <label htmlFor=\"email\">Email</label>\n              <input onChange={onChange} type=\"text\" name=\"email\" placeholder=\"Email\" required></input>\n            </div>\n\n            <div className=\"textfield\">\n              <label htmlFor=\"senha\">Senha</label>\n              <input onChange={onChange} type=\"password\" name=\"senha\" placeholder=\"Senha\" required></input>\n            </div> \n\n            <button onClick={tryLogin} className=\"btn-login\">Login</button>\n\n            <Link to={\"/register\"} className=\"btn-cadastrar\">Ainda nao tem cadastro? Cadastre-se!</Link>\n\n          </form>\n  )\n}\n","import React from \"react\";\nimport './LoginPage.css';\nimport {LoginForm} from \"../../components/LoginForm\";\n\nconst LoginPage = () => {\n  return(\n    <div className=\"page\">\n      <div className=\"main\">\n        <div className=\"left-section\">\n          <h1>Faça Login,<br/>ou crie seu cadastro!</h1>\n        </div>\n        <div className=\"right-section\">\n          <LoginForm/>\n        </div>\n      </div> \n    </div>\n  );\n}\n\nexport default LoginPage;","import React, { useState, useEffect } from 'react'\nimport {useNavigate } from 'react-router-dom';\n\nconst inicialValues = {\n    \"nome\": \"\",\n    \"email\": \"\",\n    \"senha\": \"\",\n    \"tipo_pessoa\": \"\",\n    \"data_nascimento\": \"\",\n    \"telefone\": \"\"\n}\n\nconst url = \"https://ufg-cadastros-api.herokuapp.com/cadastros\";\n\n\nconst RegisterForm = () => {\n\nconst [values, setValues] = useState(inicialValues);\nconst [data, setData] = useState([]);\nconst navigate = useNavigate();\n\nuseEffect(() =>{\n\n    (async () =>{\n        const res = await fetch(url);\n        const data = await res.json();\n        setData(data);\n      })();\n    },[]);\n  \n\n    function onChange(event) {\n        const{name, value} = event.target;\n\n        setValues({...values, [name]: value}); \n    }\n\n    const persist = () => {\n        var usedEmail = false;\n        try{\n            data.forEach((item) => {\n              if(item.email === values.email){\n                usedEmail = true;\n                alert(\"Email já cadastrado!\");\n              }\n            })\n          }\n          catch(e){\n            alert(e);\n          };\n\n        const requestOptions = {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': '*'\n            },\n\n            body: JSON.stringify({\n                nome: values.nome,\n                email: values.email,\n                senha: values.senha,\n                tipo_pessoa: values.tipo_pessoa,\n                data_nascimento: values.data_nascimento,\n                telefone: values.telefone\n            })\n        };\n\n        if(usedEmail === false){\n            fetch(url, requestOptions)\n            .then(alert(\"O usuário foi cadastrado com sucesso!\"))\n            .catch(erro => console.log(erro))\n            navigate(\"/\");\n        }\n    }\n\n  return (\n    <form className='register-form'>\n        <h1>CADASTRO</h1>\n        <div className=\"textfield\">\n              <label htmlFor=\"nome\">Nome</label>\n              <input onChange={onChange} id='nome-register' type=\"text\" name=\"nome\" placeholder=\"Nome\" required/>\n        </div>\n        <div className=\"textfield\">\n              <label htmlFor=\"email\">Email</label>\n              <input onChange={onChange} type=\"text\" id='email-register' name=\"email\" placeholder=\"Email\" required></input>\n        </div>\n        <div className=\"textfield\">\n              <label htmlFor='password'>Senha</label>\n              <input onChange={onChange} type=\"password\" id='password' name=\"senha\" placeholder=\"Senha\" required></input>\n        </div>\n        <div className='inline-content'>\n            <div className='textfield' id='tipoPessoaLabel'>\n                <label htmlFor='tipoPessoa'>Você é: </label>\n                <select onChange={onChange} className=\"select-pessoa\" name=\"tipo_pessoa\" id=\"pessoa\" required>\n                    <option >Escolha uma opção</option>\n                    <option value=\"Paciente\">Paciente</option>\n                    <option value=\"Médico\">Médico</option>\n                    <option value=\"Acompanhante\">Acompanhante</option>\n                </select>\n            </div>\n            <div className='textfield' id=\"dataNascimentoLabel\">\n                <label htmlFor=\"dataNascimento\">Data de nascimento: </label>\n                <input onChange={onChange} type=\"date\" name=\"data_nascimento\" id=\"dataNascimento-register\" required />\n            </div>\n            <div className='textfield' id='telefoneLabel'>\n                <label htmlFor=\"telefone\">Telefone</label>\n                <input onChange={onChange} type=\"text\" name=\"telefone\" id=\"telefone\" placeholder='Telefone' required/>\n            </div>\n        </div>\n\n        <button onClick={persist} type=\"submit\" className='btn-register'>Cadastrar</button>\n\n    </form>\n  )\n}\n\nexport default RegisterForm","import React from 'react';\nimport RegisterForm from '../../components/RegisterForm';\nimport './RegisterPage.css';\n\nconst RegisterPage = () => {\n  return (\n    <div className='main'>\n      <RegisterForm/>\n    </div>\n  );\n}\n\nexport default RegisterPage;","import React from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport './HomeComponent.css'\n\nexport const HomeComponent = () => {\n    const user = JSON.parse(sessionStorage.getItem('activeUser'));\n    const navigate = useNavigate();\n\n    function redirectMedicos() {\n        navigate(\"/medicos\");\n    }\n\n    function redirectPacientes() {\n        navigate(\"/pacientes\");\n    }\n\n    function redirectCadastros() {\n        navigate(\"/cadastros\");\n    }\n\n    return (\n        <div className='home'>\n            <div className='content'>\n                <h1 className='title'>Bem vindo, {user.nome.split(' ')[0]}!</h1>\n                <div className='options'>\n                    <div onClick={redirectMedicos} id='opt' className='opt-medico'>\n                        <h1>Médicos</h1>\n                        <img alt='medicos'src='https://i.imgur.com/3XQKPrw.png'/>\n                        <span>Lista todos os profissionais da saúde cadastrados no sistema.</span>\n                    </div>\n                    <div onClick={redirectPacientes} id='opt' className='opt-paciente'>\n                        <h1>Pacientes</h1>\n                        <img alt='pacientes' src='https://i.imgur.com/9BAGI3X.png'/>\n                        <span>Lista todos os pacientes internados cadastrados no sistema.</span>\n                    </div>\n                    <div onClick={redirectCadastros} id='opt' className='opt-cadastro'>\n                        <h1>Cadastros</h1>\n                        <img alt='cadastros' src='https://i.imgur.com/jHSh5us.png'/>\n                        <span>Lista todos os usuários cadastrados no sistema.</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport './NavBar.css';\nimport {FiLogOut} from 'react-icons/fi'\nimport { Link } from 'react-router-dom';\n\nexport const NavBar = () => {\n  return (\n    <div className='nav-bar'>\n      <nav className='nav'>\n        <img className='logo' src='https://i.imgur.com/HBDe1Wd.png' alt=\"logo\"/>\n        <div className='links'>\n            <Link to={'/home'} className='link-home'>Inicio</Link>\n            <Link to={\"/about\"} className='link-sobre' href=''>Sobre</Link>\n            <Link to={\"/profile\"} className='link-profile' href=\"\">Meu perfil</Link>\n            <Link to={\"/\"} onClick={() =>{sessionStorage.setItem('activeUser', [])}} className='btn-sair' href=\"\">Sair <FiLogOut/></Link>\n        </div>\n      </nav>\n    </div>\n  )\n}\n","import React from 'react';\nimport { HomeComponent } from '../../components/HomeComponent';\nimport { NavBar } from '../../components/NavBar';\nimport './HomePage.css';\n\nexport const HomePage = () => {\n  return (\n    <div>\n      <NavBar/>\n      <HomeComponent/>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useState } from 'react'\nimport './EditMedico.css'\n\nexport const EditMedico = ({closeEdit}) => {\n\n    const [user, setUser] = useState(JSON.parse(sessionStorage.getItem('user')))\n\n    function onChange(event) {\n        const{name, value} = event.target;\n\n        setUser({...user, [name]: value}); \n    }\n\n    const requestOptions = {\n        method: 'PUT',\n        headers: {\n            \"Content-Type\": \"application/json\",\n            'Access-Control-Allow-Origin': '*'\n        },\n\n        body: JSON.stringify({\n            nome: user.nome,\n            email: user.email,\n            especialidade: user.especialidade,\n            username: user.email\n\n        })\n    }\n\n    const put = () => {\n        const url = \"https://ufg-painel-paciente-api.herokuapp.com/medicos/\"+user.id;\n        \n        fetch(url, requestOptions)\n        .then(alert(\"O usuário foi alterado com sucesso!\"))\n        .catch(error => console.log(error))\n    }\n\n  return (\n    <div>\n        <form className='alterar-medico'>\n            <h1>Alterar dados</h1>\n            <div className='lado1'>\n                <div id='id-form' className='textfield'>\n                    <label htmlFor=\"id\">ID</label>\n                    <input readOnly onChange={onChange}  value={user.id} type=\"text\" id='id-form' name='id' placeholder='#'/>\n                </div>\n                <div id='nome-dorm' className=\"textfield\">\n                    <label htmlFor=\"nome\">Nome</label>\n                    <input onChange={onChange}  value={user.nome} id='nome-form' type=\"text\" name=\"nome\" placeholder=\"Nome\"/>\n                </div>\n            </div>\n            <div className='lado'>\n                <div className=\"textfield\">\n                    <label htmlFor=\"especialidade\">Especialidade</label>\n                    <input onChange={onChange} value={user.especialidade} type=\"text\" id='especialidade-form' name=\"especialidade\" placeholder=\"Especialidade\" ></input>\n                </div>\n                <div className=\"textfield\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input onChange={onChange} value={user.email} type=\"text\" id='email-form' name=\"email\" placeholder=\"Email\"></input>\n                </div>\n                \n            </div>\n            <div className='btns-form'>\n                <button className='btn-alterar' onClick={put}>Alterar</button>\n                <button className='btn-cancelar' onClick={() => {closeEdit=false}}>Cancelar</button>\n            </div>\n        </form>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\n\nexport const CreateMedico = ({closeCreate}) => {\n\n    const url = \"https://ufg-painel-paciente-api.herokuapp.com/medicos\"\n    const [user, setUser] = useState([])\n    const requestOptions = {\n        method: 'POST',\n        headers: {\n            \"Content-Type\": \"application/json\",\n            'Access-Control-Allow-Origin': '*'\n        },\n\n        body: JSON.stringify({\n            nome: user.nome,\n            email: user.email,\n            especialidade: user.especialidade,\n            username: user.email\n\n        })\n    }\n\n    function onChange(event) {\n        const{name, value} = event.target;\n\n        setUser({...user, [name]: value}); \n    }\n\n    const post = () =>{\n        fetch(url, requestOptions)\n        .then(alert(\"O usuário foi inserido com sucesso!\"))\n        .catch(error => console.log(error))\n    }\n  return (\n    <div>\n        <form className='alterar-medico'>\n            <h1>Inserir um médico</h1>\n            <div className='lado1'>\n                <div id='id-form' className='textfield'>\n                    <label htmlFor=\"id\">ID</label>\n                    <input readOnly onChange={onChange}  value={user.id} type=\"text\" id='id-form' name='id' placeholder='#'/>\n                </div>\n                <div id='nome-dorm' className=\"textfield\">\n                    <label htmlFor=\"nome\">Nome</label>\n                    <input onChange={onChange}  value={user.nome} id='nome-form' type=\"text\" name=\"nome\" placeholder=\"Nome\"/>\n                </div>\n            </div>\n            <div className='lado'>\n                <div className=\"textfield\">\n                    <label htmlFor=\"especialidade\">Especialidade</label>\n                    <input onChange={onChange} value={user.especialidade} type=\"text\" id='especialidade-form' name=\"especialidade\" placeholder=\"Especialidade\" ></input>\n                </div>\n                <div className=\"textfield\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input onChange={onChange} value={user.email} type=\"text\" id='email-form' name=\"email\" placeholder=\"Email\"></input>\n                </div>\n                \n            </div>\n            <div className='btns-form'>\n                <button className='btn-alterar' onClick={post}>Inserir</button>\n                <button className='btn-cancelar' onClick={() => {closeCreate=false}}>Cancelar</button>\n            </div>\n        </form>\n    </div>\n  )\n}\n","import React from 'react'\nimport './ListMedicos.css'\nimport {FiEdit} from 'react-icons/fi'\nimport {AiOutlineDelete} from 'react-icons/ai'\nimport { useState } from 'react'\nimport { EditMedico } from './EditMedico'\nimport { CreateMedico } from './CreateMedico'\n\n\n\nexport const ListMedicos = ({data}) => {\n    const [openEdit, setOpenEdit] = useState(false);\n    const [openCreate, setOpenCreate] = useState(false);\n\n    function putData (data) {\n        setOpenEdit(true);\n        setOpenCreate(false); \n        sessionStorage.setItem('user', JSON.stringify(data))\n    }\n\n    function deleteData (data){\n        let text = \"Deseja realmente deletar o usuário \"+data.nome+\" ?\"; \n        if(window.confirm(text) === true){\n            const url = \"https://ufg-painel-paciente-api.herokuapp.com/medicos/\"+data.id;\n            const requestOptions = {\n                method: 'DELETE'};\n\n            fetch(url, requestOptions)\n                .then(alert(\"O usuário foi removido com sucesso!\"))\n                .catch(erro => console.log(erro))\n\n        }\n    }\n     \n\n  return (\n    <>\n        {openCreate && <CreateMedico closeEdit={setOpenCreate}/>}\n        {openEdit && <EditMedico closeEdit={setOpenEdit}/>}\n\n        <div className='div-btn-inserir'>\n            <button id='btn-inserir' onClick={()=>{setOpenEdit(false); setOpenCreate(true); document.getElementById('btn-inserir').style.display=\"none\"}} className='inserir-medico'>Inserir um médico</button>\n        </div>\n        <table className='content-table'>\n            <thead>\n            <tr>\n                    <th id='id'>#</th>\n                    <th id='nome'>Nome</th>\n                    <th id='especialidade'>Especialidade</th>\n                    <th id='email'>Email</th>\n                    <th id='acoes'>Ações</th>\n            </tr>\n            </thead>\n            <tbody>\n            {data.map((data)=> (\n                <tr key={data.id}>\n                    <td  id='id'>{data.id}</td>\n                    <td  id='nome'>{data.nome}</td>\n                    <td  id='especialidade'>{data.especialidade}</td>\n                    <td  id='email'>{data.email}</td>\n                    <td  id='acoes'><FiEdit onClick={()=>{putData(data)}} className='edit-btn'/> <AiOutlineDelete onClick={() => {deleteData(data)}} className='delete-btn'/></td>\n                </tr>\n            ))}\n            </tbody>\n        </table>\n    </>\n\n\n  )\n}\n\n","import React from 'react'\nimport { useState } from 'react'\nimport { useEffect } from 'react'\nimport { ListMedicos } from '../../components/ListMedicos'\nimport { NavBar } from '../../components/NavBar'\nimport './MedicosPage.css'\n\nexport const MedicosPage = () => {\n\n    const url = \"https://ufg-painel-paciente-api.herokuapp.com/medicos\"\n    const [rows, setRows] = useState([]);\n    \n\n    useEffect(() =>{\n        (async () =>{\n            const res = await fetch(url);\n            const data = await res.json();\n            setRows(data);\n          })();\n        },[]);\n\n  return (\n    <div>\n        <NavBar/>\n        <div className='content-list'>\n            <div className='table'>\n                <ListMedicos data={rows}/>\n            </div>\n        </div>\n\n    </div>\n  )\n}\n","import React, { useState } from 'react'\n\nexport const CreatePaciente = ({closeCreate}) => {\n\n    const url = \"https://ufg-painel-paciente-api.herokuapp.com/pacientes\"\n    const [user, setUser] = useState([])\n    const requestOptions = {\n        method: 'POST',\n        headers: {\n            \"Content-Type\": \"application/json\",\n            'Access-Control-Allow-Origin': '*'\n        },\n\n        body: JSON.stringify({\n            nome: user.nome,\n            cpf: user.cpf,\n            dataNascimento: user.dataNascimento,\n            telefone: user.telefone,\n            email: user.email,\n            sintomas: user.sintomas,\n            dataEntrada: user.dataEntrada\n\n        })\n    }\n\n    function onChange(event) {\n        const{name, value} = event.target;\n\n        setUser({...user, [name]: value}); \n    }\n\n    const post = () =>{\n        console.log(user)\n        fetch(url, requestOptions)\n        .then(alert(\"O usuário foi inserido com sucesso!\"))\n        .catch(error => console.log(error))\n    }\n  return (\n    <div>\n        <form className='alterar-medico'>\n            <h1>Inserir um paciente</h1>\n            <div className='lado1'>\n                <div id='id-form' className='textfield'>\n                    <label htmlFor=\"id\">ID</label>\n                    <input readOnly onChange={onChange} type=\"text\" id='id-form' name='id' placeholder='#'/>\n                </div>\n                <div id='nome-form' className=\"textfield\">\n                    <label htmlFor=\"nome\">Nome</label>\n                    <input onChange={onChange} id='nome-form' type=\"text\" name=\"nome\" placeholder=\"Nome\"/>\n                </div>\n                <div id='cpf-form' className=\"textfield\">\n                    <label htmlFor=\"cpf\">CPF</label>\n                    <input onChange={onChange} id='cpf-form' type=\"text\" name=\"cpf\" placeholder=\"CPF\"/>\n                </div>\n                <div className='textfield' id=\"dataNascimento\">\n                    <label htmlFor=\"dataNascimento\">Data de nascimento: </label>\n                    <input onChange={onChange}  type=\"date\" name=\"dataNascimento\" id=\"dataNascimento-form\"  />\n                </div>\n                <div className='textfield' id=\"dataNascimentoLabel\">\n                    <label htmlFor=\"dataEntrada\">Data de entrada: </label>\n                    <input onChange={onChange} type=\"date\" name=\"dataEntrada\" id=\"dataEntrada-form\"  />\n                </div>\n            </div>\n            <div id='lado'className='lado'>\n                <div className=\"textfield\">\n                    <label htmlFor=\"telefone\">Telefone</label>\n                    <input onChange={onChange}  type=\"text\" id='telefone-form' name=\"telefone\" placeholder=\"Telefone\" ></input>\n                </div>\n                <div className=\"textfield\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input onChange={onChange} type=\"text\" id='email-form' name=\"email\" placeholder=\"Email\"></input>\n                </div>\n                <div className=\"textfield\">\n                    <label htmlFor=\"sintomas\">Sintomas</label>\n                    <input onChange={onChange}  type=\"text\" id='sintomas-form' name=\"sintomas\" placeholder=\"Sintomas\"></input>\n                </div>\n                \n            </div>\n            <div className='btns-form'>\n                <button className='btn-alterar' onClick={post}>Inserir</button>\n                <button className='btn-cancelar' onClick={() => {closeCreate=false}}>Cancelar</button>\n            </div>\n        </form>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\n\nexport const EditPaciente = ({closeEdit}) => {\n    const [user, setUser] = useState(JSON.parse(sessionStorage.getItem('user')))\n\n    function onChange(event) {\n        const{name, value} = event.target;\n\n        setUser({...user, [name]: value}); \n    }\n\n    const requestOptions = {\n        method: 'PUT',\n        headers: {\n            \"Content-Type\": \"application/json\",\n            'Access-Control-Allow-Origin': '*'\n        },\n\n        body: JSON.stringify({\n            nome: user.nome,\n            cpf: user.cpf,\n            dataNascimento: user.dataNascimento,\n            telefone: user.telefone,\n            email: user.email,\n            sintomas: user.sintomas,\n            dataEntrada: user.dataEntrada\n        })\n    }\n\n    const put = () => {\n        const url = \"https://ufg-painel-paciente-api.herokuapp.com/pacientes/\"+user.id;\n        \n        fetch(url, requestOptions)\n        .then(alert(\"O usuário foi alterado com sucesso!\"))\n        .catch(error => console.log(error))\n    }\n  return (\n    <div className='form-paciente'>\n        <form id=\"form-alterar-paciente\" className='alterar-medico'>\n            <h1>Alterar dados</h1>\n            <div className='lado1'>\n                <div id='id-form' className='textfield'>\n                    <label htmlFor=\"id\">ID</label>\n                    <input readOnly onChange={onChange}  value={user.id} type=\"text\" id='id-form' name='id' placeholder='#'/>\n                </div>\n                <div id='nome-form' className=\"textfield\">\n                    <label htmlFor=\"nome\">Nome</label>\n                    <input onChange={onChange}  value={user.nome} id='nome-form' type=\"text\" name=\"nome\" placeholder=\"Nome\"/>\n                </div>\n                <div id='cpf-form' className=\"textfield\">\n                    <label htmlFor=\"cpf\">CPF</label>\n                    <input onChange={onChange}  value={user.cpf} id='cpf-form' type=\"text\" name=\"cpf\" placeholder=\"CPF\"/>\n                </div>\n                <div className='textfield' id=\"dataNascimento\">\n                    <label htmlFor=\"dataNascimento\">Data de nascimento: </label>\n                    <input onChange={onChange} value={user.dataNascimento} type=\"date\" name=\"data_nascimento\" id=\"dataNascimento-form\"  />\n                </div>\n                <div className='textfield' id=\"dataNascimentoLabel\">\n                    <label htmlFor=\"dataEntrada\">Data de entrada: </label>\n                    <input onChange={onChange} value={user.dataEntrada} type=\"date\" name=\"data_entrada\" id=\"dataEntrada-form\"  />\n                </div>\n            </div>\n            <div id='lado'className='lado'>\n                <div className=\"textfield\">\n                    <label htmlFor=\"telefone\">Telefone</label>\n                    <input onChange={onChange} value={user.telefone} type=\"text\" id='telefone-form' name=\"telefone\" placeholder=\"Telefone\" ></input>\n                </div>\n                <div className=\"textfield\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input onChange={onChange} value={user.email} type=\"text\" id='email-form' name=\"email\" placeholder=\"Email\"></input>\n                </div>\n                <div className=\"textfield\">\n                    <label htmlFor=\"sintomas\">Sintomas</label>\n                    <input onChange={onChange} value={user.sintomas} type=\"text\" id='sintomas-form' name=\"sintomas\" placeholder=\"Sintomas\"></input>\n                </div>\n                \n            </div>\n            <div className='btns-form'>\n                <button className='btn-alterar' onClick={put}>Alterar</button>\n                <button className='btn-cancelar' onClick={() => {closeEdit=false}}>Cancelar</button>\n            </div>\n        </form>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport './ListPacientes.css'\nimport {FiEdit} from 'react-icons/fi'\nimport {AiOutlineDelete} from 'react-icons/ai'\nimport { CreatePaciente } from './CreatePaciente'\nimport { EditPaciente } from './EditPaciente'\n\nexport const ListPacientes = ({data}) => {\n\n    const [openEdit, setOpenEdit] = useState(false);\n    const [openCreate, setOpenCreate] = useState(false);\n\n    function putData (data) {\n        setOpenEdit(true);\n        setOpenCreate(false); \n        sessionStorage.setItem('user', JSON.stringify(data))\n    }\n\n    function deleteData (data){\n        let text = \"Deseja realmente deletar o usuário \"+data.nome+\" ?\"; \n        if(window.confirm(text) === true){\n            const url = \"https://ufg-painel-paciente-api.herokuapp.com/pacientes/\"+data.id;\n            const requestOptions = {\n                method: 'DELETE'};\n\n            fetch(url, requestOptions)\n                .then(alert(\"O usuário foi removido com sucesso!\"))\n                .catch(erro => console.log(erro))\n\n        }\n    }\n  return (\n    <>\n        {openCreate && <CreatePaciente closeEdit={setOpenCreate}/>}\n        {openEdit && <EditPaciente closeEdit={setOpenEdit}/>}\n        <div className='div-btn-inserir'>\n            <button id='btn-inserir' onClick={()=>{setOpenEdit(false); setOpenCreate(true); document.getElementById('btn-inserir').style.display=\"none\"}} className='inserir-medico'>Inserir um paciente</button>\n        </div>\n        <table className='content-table'>\n            <thead>\n            <tr>\n                    <th id='paciente-id'>#</th>\n                    <th id='paciente-nome'>Nome</th>\n                    <th id='paciente-cpf'>CPF</th>\n                    <th id='paciente-dataNascimento'>Data de Nascimento</th>\n                    <th id='paciente-telefone'>Telefone</th>\n                    <th id='paciente-email'>Email</th>\n                    <th id='paciente-sintomas'>Sintomas</th>\n                    <th id='paciente-dataEntrada'>Data entrada</th>\n                    <th id='paciente-acoes'>Ações</th>\n            </tr>\n            </thead>\n            <tbody>\n            {data.map((data)=> (\n                <tr key={data.id}>\n                    <td  id='paciente-id'>{data.id}</td>\n                    <td  id='paciente-nome'>{data.nome}</td>\n                    <td  id='paciente-cpf'>{data.cpf}</td>\n                    <td  id='paciente-dataNascimento'>{data.dataNascimento}</td>\n                    <td  id='paciente-telefone'>{data.telefone}</td>\n                    <td  id='paciente-email'>{data.email}</td>\n                    <td  id='paciente-sintomas'>{data.sintomas}</td>\n                    <td  id='paciente-dataEntrada'>{data.dataEntrada}</td>\n                    <td  id='paciente-acoes'><FiEdit onClick={()=>{putData(data)}} className='edit-btn'/> <AiOutlineDelete onClick={() => {deleteData(data)}} className='delete-btn'/></td>\n                </tr>\n            ))}\n            </tbody>\n        </table>\n    </>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { ListPacientes } from '../../components/ListPacientes'\nimport { NavBar } from '../../components/NavBar'\n\nexport const PacientesPage = () => {\n\n  const url = \"https://ufg-painel-paciente-api.herokuapp.com/pacientes\"\n    const [rows, setRows] = useState([]);\n    \n\n    useEffect(() =>{\n        (async () =>{\n            const res = await fetch(url);\n            const data = await res.json();\n            setRows(data);\n          })();\n        },[]);\n\n  return (\n    <div>\n        <NavBar/>\n        <div className='content-list'>\n            <div className='table'>\n                <ListPacientes data={rows}/>\n            </div>\n        </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport const ListCadastros = ({data}) => {\n  return (\n    <div>\n        \n        <table className='content-table'>\n            <thead>\n            <tr>\n                    <th id='id'>#</th>\n                    <th id='nome'>Nome</th>\n                    <th id='email'>Email</th>\n                    <th id='telefone'>Telefone</th>\n                    <th id='data_nascimento'>Data de Nascimento</th>\n                    <th id='tipo_pessoa'>Tipo</th>\n            </tr>\n            </thead>\n            <tbody>\n            {data.map((data)=> (\n                <tr key={data.id}>\n                    <td  id='id'>{data.id}</td>\n                    <td  id='nome'>{data.nome}</td>\n                    <td  id='email'>{data.email}</td>\n                    <td  id='telefone'>{data.telefone}</td>\n                    <td  id='data_nascimento'>{data.data_nascimento}</td>\n                    <td  id='tipo_pessoa'>{data.tipo_pessoa}</td>\n                </tr>\n            ))}\n            </tbody>\n        </table>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { ListCadastros } from '../../components/ListCadastros';\nimport { NavBar } from '../../components/NavBar'\n\nexport const CadastrosPage = () => {\n\n  const url = \"https://ufg-cadastros-api.herokuapp.com/cadastros\"\n  const [rows, setRows] = useState([]);\n  \n\n  useEffect(() =>{\n      (async () =>{\n          const res = await fetch(url);\n          const data = await res.json();\n          setRows(data);\n        })();\n      },[]);\n\n\n  return (\n    <div>\n        <NavBar/>\n        <div className='content-list'>\n            <div className='table'>\n                <ListCadastros data={rows}/>\n            </div>\n        </div>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\n\nexport const ProfileEdit = ({profileEdit}) => {\n    const [user, setUser] = useState(JSON.parse(sessionStorage.getItem('activeUser'))) \n  \n    const requestOptions = {\n        method: 'PUT',\n        headers: {\n            \"Content-Type\": \"application/json\",\n            'Access-Control-Allow-Origin': '*'\n        },\n\n        body: JSON.stringify({\n            nome: user.nome,\n            email: user.email,\n            senha: user.senha,\n            data_nascimento: user.data_nascimento,\n            telefone: user.telefone,\n            tipo_pessoa: user.tipo_pessoa,\n\n        })\n    }\n\n    const put = () => {\n        const url = \"https://ufg-cadastros-api.herokuapp.com/cadastros/\"+user.id;\n        \n        if(window.confirm(\"Deseja realmente editar este usuario?\") === true){\n            fetch(url, requestOptions)\n                .then(alert(\"O usuário foi alterado com sucesso!\"))\n                .catch(error => console.log(error))\n\n            sessionStorage.setItem('activeUser', JSON.stringify(user))    \n            profileEdit(false);\n        }\n    }\n\n    function onChange(event) {\n      const{name, value} = event.target;\n  \n      setUser({...user, [name]: value}); \n  }\n    return (\n      <div>\n          <div className='profile-content'>\n              <div className='left-content'>\n              <h1>Minhas informações</h1>\n                <div className='bg'></div>\n              </div>\n              <div className='right-content'>\n                <form className='form-edit'>\n                  <div className=\"textfield\">\n                    <h1>Edite suas informações!</h1>\n                      <label htmlFor=\"nome\">Nome</label>\n                      <input onChange={onChange}  value={user.nome}id='nome-profile' type=\"text\" name=\"nome\" placeholder=\"Nome\" required/>\n                  </div>\n                  <div className=\"textfield\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input onChange={onChange}  value={user.email} type=\"text\" id='email-profile' name=\"email\" placeholder=\"Email\" required></input>\n                  </div>\n                  <div className='inline-content'>\n                    <div className=\"textfield\">\n                    <label htmlFor='tipoPessoa'>Você é: </label>\n                    <select onChange={onChange} value={user.tipo_pessoa}className=\"select-pessoa\" name=\"tipo_pessoa\" id=\"pessoa\" required>\n                        <option disabled>Escolha uma opção</option>\n                        <option value=\"Paciente\">Paciente</option>\n                        <option value=\"Médico\">Médico</option>\n                        <option value=\"Acompanhante\">Acompanhante</option>\n                    </select>    \n                    </div>\n                    <div id='inline-edit' className=\"textfield\">\n                        <label htmlFor=\"data_nascimento\">Data de nascimento</label>\n                        <input onChange={onChange}  value={user.data_nascimento} type=\"date\" id='data-nascimento-profile' name=\"data_nascimento\" placeholder=\"Data de Nascimento\" ></input>\n                    </div>\n                  </div>\n                  <div className=\"textfield\">\n                    <label htmlFor=\"tipo_pessoa\">Telefone</label>\n                    <input onChange={onChange}  value={user.telefone} type=\"text\" id='telefone-profile' name=\"telefone\" placeholder=\"Telefone\" required></input>\n                  </div>\n                  <div className=\"textfield\">\n                    <label htmlFor=\"tipo_pessoa\">Senha</label>\n                    <input onChange={onChange}  value={user.senha} type=\"password\" id='senha-profile' name=\"senha\" placeholder=\"Senha\" required></input>\n                  </div>\n  \n                  <div className='btns'>\n                    <button onClick={put} className='btn-editar'>Salvar</button>\n                    <button onClick={() =>{profileEdit(false)}} className='btn-excluir'>Cancelar edição</button>\n                  </div>\n  \n                </form>\n              </div>\n          </div>\n      </div>\n  )\n}\n","import React from 'react'\nimport { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport './ProfileInfo.css'\n\nexport const ProfileInfo = ({profileEdit}) => {\n\n  const [user, setUser] = useState(JSON.parse(sessionStorage.getItem('activeUser'))) \n  const navigate = useNavigate();\n\n  function deleteData (data){\n    let text = \"Deseja realmente deletar o usuário \"+user.nome+\" ?\"; \n    if(window.confirm(text) === true){\n        const url = \"https://ufg-cadastros-api.herokuapp.com/cadastros/\"+data;\n        const requestOptions = {\n            method: 'DELETE'};\n\n        fetch(url, requestOptions)\n            .then(alert(\"O usuário foi removido com sucesso!\"))\n            .catch(erro => console.log(erro))\n            sessionStorage.setItem('activeUser',[])\n            navigate('/');\n    }\n}\n\n  function onChange(event) {\n    const{name, value} = event.target;\n\n    setUser({...user, [name]: value}); \n}\n  return (\n    <div>\n        <div className='profile-content'>\n            <div className='left-content'>\n              <h1>Minhas informações</h1>\n              <div className='bg'></div>\n            </div>\n            <div className='right-content'>\n              <form className='form-edit'>\n                <div className=\"textfield\">\n                  <h1>Informações</h1>\n                    <label htmlFor=\"nome\">Nome</label>\n                    <input onChange={onChange} readOnly value={user.nome}id='nome-profile' type=\"text\" name=\"nome\" placeholder=\"Nome\" required/>\n                </div>\n                <div className=\"textfield\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input onChange={onChange} readOnly value={user.email} type=\"text\" id='email-profile' name=\"email\" placeholder=\"Email\" required></input>\n                </div>\n                <div className='inline-content'>\n                  <div className=\"textfield\">\n                    <label htmlFor=\"tipo_pessoa\">Função</label>\n                    <input onChange={onChange} readOnly value={user.tipo_pessoa} type=\"text\" id='tipo-pessoa-profile' name=\"email\" placeholder=\"Email\" required></input>\n                  </div>\n                  <div id='inline-edit' className=\"textfield\">\n                    <label htmlFor=\"data_nascimento\">Data de nascimento</label>\n                    <input onChange={onChange} readOnly value={user.data_nascimento} type=\"text\" id='data-nascimento-profile' name=\"data_nascimento\" placeholder=\"Data de Nascimento\" required></input>\n                  </div>\n                </div>\n                <div className=\"textfield\">\n                  <label htmlFor=\"tipo_pessoa\">Telefone</label>\n                  <input onChange={onChange} readOnly value={user.telefone} type=\"text\" id='telefone-profile' name=\"telefone\" placeholder=\"Telefone\" required></input>\n                </div>\n                <div className=\"textfield\">\n                  <label htmlFor=\"tipo_pessoa\">Senha</label>\n                  <input onChange={onChange} readOnly value={user.senha} type=\"password\" id='senha-profile' name=\"senha\" placeholder=\"Senha\" required></input>\n                </div>\n\n                <div className='btns'>\n                  <button onClick={()=>{profileEdit(true)}} className='btn-editar'>Editar dados</button>\n                  <button onClick={() =>{deleteData(user.id)}} className='btn-excluir'>Excluir cadastro</button>\n                </div>\n\n              </form>\n            </div>\n        </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useState } from 'react'\nimport { NavBar } from '../../components/NavBar'\nimport { ProfileEdit } from '../../components/ProfileEdit'\nimport { ProfileInfo } from '../../components/ProfileInfo'\n\nexport const ProfilePage = () => {\n\n  const [openProfileEdit, setOpenProfileEdit] = useState (false)\n  return (\n    <div>\n        <NavBar/>\n        {!openProfileEdit && <ProfileInfo profileEdit={setOpenProfileEdit}/>}\n        {openProfileEdit && <ProfileEdit profileEdit={setOpenProfileEdit}/>}\n    </div>\n  )\n}\n","import React from 'react'\nimport './AboutPage.css'\nimport { NavBar } from '../../components/NavBar'\nimport {FaGithub} from 'react-icons/fa'\n\nexport const AboutPage = () => {\n  return (\n    <div>\n        <NavBar/>\n        <div className='about-content'>\n            <h1 className='title-about'>Projeto Painel Paciente</h1>\n            <p className='subtitle-about'>Universidade Federal de Goiás</p>\n            <h2 className='devs-title'>Desenvoldedores</h2>\n            <div className='devs'>\n                <div className='dev1'>\n                    <img id='foto' src=\"https://i.imgur.com/cq3Vele.jpg\" alt=\"álvaro-foto\" />\n                    <p id='nome-dev'>Álvaro Veloso Lisboa</p>\n                    <p id='curso'>Engenharia de Computação - UFG</p>\n                    <p id='atribuições'>No projeto, atuou no desenvolvimento do Frontend <br/>e das API's REST.</p>\n                </div>\n                <div className='dev2'>\n                    <img id='foto' src=\"https://i.imgur.com/8uMkVqr.jpg\" alt=\"vinicius-foto\" />\n                    <p id='nome-dev'>Vinícius Ferreira de Oliveira</p>\n                    <p id='curso'>Sistemas de Informação - UFG</p>\n                    <p id='atribuições'>No projeto, atuou no desenvolvimento das API's REST.</p>\n                </div>\n            </div>\n            <div className='about-text'>\n                <h1>Sobre o projeto</h1>\n                <p>Este projeto foi desenvolvido para a disciplina de Desenvolvimento FullStack, no semestre de 2022/1 na Universidade Federal de Goiás.\n                <br/> Trabalhando com os conceitos da Arquitetura de Microsserviços, construímos duas API REST com SpringBoot, publicadas no <a href='heroku.com'>Heroku</a> e banco de dados PostgreSQL da plataforma. Quanto ao \n                FrontEnd, utilizamos React e seus tecnologias. Agradeceços especialmente ao professor <b>Reinaldo Junior</b>, o qual ministrou a disciplina, e nos orientou quanto à Arquitetura \n                de Microsserviços e o SpringBoot.<br/>Caso tenha se interessado, abaixo segue o link do repositório no <b>GitHub</b>, sinta-se livre para implementá-lo.</p>\n                <a className='link-github' href=\"https://github.com/AlvaroVeloso070/painel-paciente-project\"><FaGithub/> Repositório Painel Paciente</a>\n            </div>\n        </div>\n    </div>\n  )\n}\n","import React from \"react\";\nimport './App.css';\n\nimport {BrowserRouter, Routes, Route} from 'react-router-dom';\nimport LoginPage from \"./pages/LoginPage/LoginPage\";\nimport RegisterPage from \"./pages/RegisterPage/RegisterPage\";\nimport { HomePage } from \"./pages/HomePage/HomePage\";\nimport { MedicosPage } from \"./pages/MedicosPage/MedicosPage\";\nimport { PacientesPage } from \"./pages/PacientesPage/PacientesPage\";\nimport { CadastrosPage } from \"./pages/CadastrosPage/CadastrosPage\";\nimport { ProfilePage } from \"./pages/ProfilePage/ProfilePage\";\nimport { AboutPage } from \"./pages/AboutPage/AboutPage\";\n\nconst App = () => {\n  return(\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<LoginPage/>}/>\n        <Route path=\"/register\" element = {<RegisterPage/>}/>\n        <Route path=\"/home\" element = {<HomePage/>}/>\n        <Route path=\"/medicos\" element = {<MedicosPage/>}/>\n        <Route path=\"/pacientes\" element = {<PacientesPage/>}/>\n        <Route path=\"/cadastros\" element = {<CadastrosPage/>}/>\n        <Route path=\"/profile\" element = {<ProfilePage/>}/>\n        <Route path=\"/about\" element = {<AboutPage/>}/>\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>\n);\n\n\n"],"sourceRoot":""}